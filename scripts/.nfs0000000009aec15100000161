-- ========================================
-- Política RLS para validação case-sensitive
-- ========================================

-- 1. Habilitar RLS na tabela auth.users (se não estiver habilitado)
-- ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

-- 2. Criar política que só permite acesso a emails exatos
CREATE OR REPLACE POLICY email_case_sensitive_policy ON auth.users
  FOR ALL
  USING (
    -- Só permite acesso se o email for exatamente igual
    email = current_setting('request.jwt.claims', true)::json->>'email'
  );

-- 3. Criar função para login case-sensitive
CREATE OR REPLACE FUNCTION auth.email_case_sensitive_login(
  user_email text,
  user_password text
)
RETURNS json AS $$
DECLARE
  user_record auth.users%ROWTYPE;
  result json;
BEGIN
  -- Verificar se existe usuário com email EXATO
  SELECT * INTO user_record
  FROM auth.users
  WHERE email = user_email;
  
  IF NOT FOUND THEN
    RETURN json_build_object('error', 'Email não encontrado ou incorreto');
  END IF;
  
  -- Se encontrou, prosseguir com login normal
  -- (Esta parte precisaria ser implementada com a API do Supabase)
  RETURN json_build_object('success', true, 'user_id', user_record.id);
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;
