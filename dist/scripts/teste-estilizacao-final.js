"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = __importDefault(require("dotenv"));
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const ExportService_1 = require("../src/services/relatorio/ExportService");
// Carregar vari√°veis de ambiente
dotenv_1.default.config({ path: path_1.default.join(__dirname, '../.env') });
async function testeCompletoEstilizacao() {
    console.log('üé® [TESTE] Testando estiliza√ß√£o completa do XLSX...');
    try {
        const exportService = new ExportService_1.ExportService();
        // Gerar XLSX estilizado
        console.log('\nüìä Gerando XLSX estilizado...');
        const xlsxBuffer = await exportService.gerarXLSX(306);
        // Salvar arquivo final
        const finalPath = 'temp/RELATORIO_COTACAO_306_FINAL.xlsx';
        fs_1.default.writeFileSync(finalPath, xlsxBuffer);
        console.log(`‚úÖ XLSX estilizado salvo em: ${finalPath}`);
        console.log(`üìè Tamanho do arquivo: ${xlsxBuffer.length} bytes`);
        // Gerar CSV tamb√©m para compara√ß√£o
        console.log('\nüìÑ Gerando CSV para compara√ß√£o...');
        const csv = await exportService.gerarCSV(306);
        fs_1.default.writeFileSync('temp/RELATORIO_COTACAO_306_FINAL.csv', csv);
        console.log('\nüéØ [RECURSOS IMPLEMENTADOS]:');
        console.log('‚úÖ Cabe√ßalhos coloridos (azul profissional)');
        console.log('‚úÖ Linhas alternadas (zebra pattern)');
        console.log('‚úÖ Bordas e formata√ß√£o');
        console.log('‚úÖ Largura autom√°tica das colunas');
        console.log('‚úÖ T√≠tulos estilizados');
        console.log('‚úÖ Linha TOTAL destacada');
        console.log('‚úÖ Formata√ß√£o monet√°ria (AOA)');
        console.log('\nüìã [ESTRUTURA DO XLSX]:');
        console.log('üî∏ Aba "Informa√ß√µes Gerais" - Dados da cota√ß√£o');
        console.log('üî∏ Aba "Itens" - Tabela de itens com estiliza√ß√£o');
        console.log('üî∏ Aba "Faltantes" - Se houver itens faltantes');
    }
    catch (error) {
        console.error('‚ùå [TESTE] Erro:', error);
        if (error instanceof Error) {
            console.error('‚ùå [TESTE] Stack trace:', error.stack);
        }
    }
}
testeCompletoEstilizacao().then(() => {
    console.log('\nüèÅ Teste de estiliza√ß√£o completo finalizado');
    console.log('üìÅ Arquivo final: temp/RELATORIO_COTACAO_306_FINAL.xlsx');
    process.exit(0);
}).catch(error => {
    console.error('‚ùå Erro fatal:', error);
    process.exit(1);
});
//# sourceMappingURL=teste-estilizacao-final.js.map